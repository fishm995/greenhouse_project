# Flask==3.1.0
#   A lightweight web framework for Python used to build our greenhouse project web application.
Flask==3.1.0

# SQLAlchemy==2.0.40
#   An Object-Relational Mapping (ORM) library to interact with our database using Python classes.
SQLAlchemy==2.0.40

# SQLAlchemy-Utils==0.41.2
#   Provides additional utility functions for SQLAlchemy, such as checking if a database exists.
SQLAlchemy-Utils==0.41.2

# PyJWT==2.10.1
#   A library for encoding and decoding JSON Web Tokens (JWTs) used for user authentication.
PyJWT==2.10.1

# python-dotenv==1.0.1
#   Loads environment variables from a .env file so that configuration settings (like SECRET_KEY or DATABASE_URL) arenâ€™t hard-coded.
python-dotenv==1.0.1

# APScheduler==3.11.0
#   A scheduling library to run periodic background tasks (such as sensor readings and automation logic).
APScheduler==3.11.0

# psycopg2-binary==2.9.10
#   A PostgreSQL database adapter for Python, enabling our app to connect to a PostgreSQL database.
psycopg2-binary==2.9.10

# Werkzeug==3.1.3
#   A WSGI utility library required by Flask for handling web requests.
Werkzeug==3.1.3

# RPi.GPIO==0.7.1
#   A library for controlling the Raspberry Pi's GPIO pins used for operating hardware devices like actuators.
RPi.GPIO==0.7.1

# Flask-SocketIO==5.3.3
#   Extends Flask by adding support for WebSockets, which lets our application track active viewers in real-time.
Flask-SocketIO==5.5.1

# eventlet==0.33.0
#   An asynchronous networking library that enables non-blocking I/O.
#   It is used by Flask-SocketIO to support WebSockets in production.
eventlet==0.39.1

# Gunicorn==20.1.0
#   A production-grade WSGI server used to serve the Flask application.
#   When used with an asynchronous worker class (e.g., eventlet), it can handle WebSocket connections.
Gunicorn==23.0.0

